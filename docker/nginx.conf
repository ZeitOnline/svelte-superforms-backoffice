events {
    worker_connections 1024;
}

http {
    upstream app {
        server app:3000;
    }

    upstream postgrest_eckchen {
        server postgrest_eckchen:3000;
    }

    upstream postgrest_wortiger {
        server postgrest_wortiger:3000;
    }

    server {
        listen 80;
        server_name localhost;

        # Proxy requests to the SvelteKit app
        location / {
            proxy_pass http://app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }

        # Proxy API requests for Eckchen schema
        location /api/eckchen/ {
            # Remove /api/eckchen from the path before forwarding
            rewrite ^/api/eckchen/(.*) /$1 break;
            proxy_pass http://postgrest_eckchen;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Range' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Range';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Proxy API requests for Wortiger schema
        location /api/wortiger/ {
            # Remove /api/wortiger from the path before forwarding
            rewrite ^/api/wortiger/(.*) /$1 break;
            proxy_pass http://postgrest_wortiger;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Range' always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, DELETE, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization, Range';
                add_header 'Content-Length' 0;
                return 204;
            }
        }

        # Health check endpoints
        location /health/eckchen {
            proxy_pass http://postgrest_eckchen/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }

        location /health/wortiger {
            proxy_pass http://postgrest_wortiger/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
        }
    }
}
